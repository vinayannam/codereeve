updateClassNames({
Bits: {name: "Bits", type: "class", fullName: "java.io.Bits", },
BufferedInputStream: {name: "BufferedInputStream", type: "class", fullName: "java.io.BufferedInputStream", },
BufferedOutputStream: {name: "BufferedOutputStream", type: "class", fullName: "java.io.BufferedOutputStream", },
BufferedReader: {name: "BufferedReader", type: "class", fullName: "java.io.BufferedReader", },
BufferedWriter: {name: "BufferedWriter", type: "class", fullName: "java.io.BufferedWriter", },
ByteArrayInputStream: {name: "ByteArrayInputStream", type: "class", fullName: "java.io.ByteArrayInputStream", },
ByteArrayOutputStream: {name: "ByteArrayOutputStream", type: "class", fullName: "java.io.ByteArrayOutputStream", },
CharArrayReader: {name: "CharArrayReader", type: "class", fullName: "java.io.CharArrayReader", },
CharArrayWriter: {name: "CharArrayWriter", type: "class", fullName: "java.io.CharArrayWriter", },
CharConversionException: {name: "CharConversionException", type: "exception", fullName: "java.io.CharConversionException", },
Closeable: {name: "Closeable", type: "interface", fullName: "java.io.Closeable", },
Console: {name: "Console", type: "class", fullName: "java.io.Console", },
LineReader: {name: "LineReader", type: "class", fullName: "java.io.Console$LineReader", },
DataInput: {name: "DataInput", type: "interface", fullName: "java.io.DataInput", },
DataInputStream: {name: "DataInputStream", type: "class", fullName: "java.io.DataInputStream", },
DataOutput: {name: "DataOutput", type: "interface", fullName: "java.io.DataOutput", },
DataOutputStream: {name: "DataOutputStream", type: "class", fullName: "java.io.DataOutputStream", },
DefaultFileSystem: {name: "DefaultFileSystem", type: "class", fullName: "java.io.DefaultFileSystem", },
DeleteOnExitHook: {name: "DeleteOnExitHook", type: "class", fullName: "java.io.DeleteOnExitHook", },
EOFException: {name: "EOFException", type: "exception", fullName: "java.io.EOFException", },
ExpiringCache: {name: "ExpiringCache", type: "class", fullName: "java.io.ExpiringCache", },
Entry: {name: "Entry", type: "class", fullName: "java.io.ExpiringCache$Entry", },
Externalizable: {name: "Externalizable", type: "interface", fullName: "java.io.Externalizable", },
File: {name: "File", type: "class", fullName: "java.io.File", },
FileCleanable: {name: "FileCleanable", type: "class", fullName: "java.io.FileCleanable", },
FileDescriptor: {name: "FileDescriptor", type: "class", fullName: "java.io.FileDescriptor", },
FileFilter: {name: "FileFilter", type: "interface", fullName: "java.io.FileFilter", },
FileInputStream: {name: "FileInputStream", type: "class", fullName: "java.io.FileInputStream", },
FilenameFilter: {name: "FilenameFilter", type: "interface", fullName: "java.io.FilenameFilter", },
FileNotFoundException: {name: "FileNotFoundException", type: "exception", fullName: "java.io.FileNotFoundException", },
FileOutputStream: {name: "FileOutputStream", type: "class", fullName: "java.io.FileOutputStream", },
PathStatus: {name: "PathStatus", type: "enum", fullName: "java.io.File$PathStatus", },
FilePermission: {name: "FilePermission", type: "class", fullName: "java.io.FilePermission", },
FilePermissionCollection: {name: "FilePermissionCollection", type: "class", fullName: "java.io.FilePermissionCollection", },
FileReader: {name: "FileReader", type: "class", fullName: "java.io.FileReader", },
FileSystem: {name: "FileSystem", type: "class", fullName: "java.io.FileSystem", },
TempDirectory: {name: "TempDirectory", type: "class", fullName: "java.io.File$TempDirectory", },
FileWriter: {name: "FileWriter", type: "class", fullName: "java.io.FileWriter", },
FilterInputStream: {name: "FilterInputStream", type: "class", fullName: "java.io.FilterInputStream", },
FilterOutputStream: {name: "FilterOutputStream", type: "class", fullName: "java.io.FilterOutputStream", },
FilterReader: {name: "FilterReader", type: "class", fullName: "java.io.FilterReader", },
FilterWriter: {name: "FilterWriter", type: "class", fullName: "java.io.FilterWriter", },
Flushable: {name: "Flushable", type: "interface", fullName: "java.io.Flushable", },
InputStream: {name: "InputStream", type: "class", fullName: "java.io.InputStream", },
InputStreamReader: {name: "InputStreamReader", type: "class", fullName: "java.io.InputStreamReader", },
InterruptedIOException: {name: "InterruptedIOException", type: "exception", fullName: "java.io.InterruptedIOException", },
InvalidClassException: {name: "InvalidClassException", type: "exception", fullName: "java.io.InvalidClassException", },
InvalidObjectException: {name: "InvalidObjectException", type: "exception", fullName: "java.io.InvalidObjectException", },
IOError: {name: "IOError", type: "error", fullName: "java.io.IOError", },
IOException: {name: "IOException", type: "exception", fullName: "java.io.IOException", },
LineNumberInputStream: {name: "LineNumberInputStream", type: "class", fullName: "java.io.LineNumberInputStream", },
LineNumberReader: {name: "LineNumberReader", type: "class", fullName: "java.io.LineNumberReader", },
NotActiveException: {name: "NotActiveException", type: "exception", fullName: "java.io.NotActiveException", },
NotSerializableException: {name: "NotSerializableException", type: "exception", fullName: "java.io.NotSerializableException", },
ObjectInput: {name: "ObjectInput", type: "interface", fullName: "java.io.ObjectInput", },
ObjectInputStream: {name: "ObjectInputStream", type: "class", fullName: "java.io.ObjectInputStream", },
ClassDataSlot: {name: "ClassDataSlot", type: "class", fullName: "java.io.ObjectStreamClass$ClassDataSlot", },
EntryFuture: {name: "EntryFuture", type: "class", fullName: "java.io.ObjectStreamClass$EntryFuture", },
ExceptionInfo: {name: "ExceptionInfo", type: "class", fullName: "java.io.ObjectStreamClass$ExceptionInfo", },
FieldReflector: {name: "FieldReflector", type: "class", fullName: "java.io.ObjectStreamClass$FieldReflector", },
FieldReflectorKey: {name: "FieldReflectorKey", type: "class", fullName: "java.io.ObjectStreamClass$FieldReflectorKey", },
MemberSignature: {name: "MemberSignature", type: "class", fullName: "java.io.ObjectStreamClass$MemberSignature", },
WeakClassKey: {name: "WeakClassKey", type: "class", fullName: "java.io.ObjectStreamClass$WeakClassKey", },
ObjectStreamConstants: {name: "ObjectStreamConstants", type: "interface", fullName: "java.io.ObjectStreamConstants", },
ObjectStreamException: {name: "ObjectStreamException", type: "exception", fullName: "java.io.ObjectStreamException", },
ObjectStreamField: {name: "ObjectStreamField", type: "class", fullName: "java.io.ObjectStreamField", },
OptionalDataException: {name: "OptionalDataException", type: "exception", fullName: "java.io.OptionalDataException", },
OutputStream: {name: "OutputStream", type: "class", fullName: "java.io.OutputStream", },
OutputStreamWriter: {name: "OutputStreamWriter", type: "class", fullName: "java.io.OutputStreamWriter", },
PipedInputStream: {name: "PipedInputStream", type: "class", fullName: "java.io.PipedInputStream", },
PipedOutputStream: {name: "PipedOutputStream", type: "class", fullName: "java.io.PipedOutputStream", },
PipedReader: {name: "PipedReader", type: "class", fullName: "java.io.PipedReader", },
PipedWriter: {name: "PipedWriter", type: "class", fullName: "java.io.PipedWriter", },
PrintStream: {name: "PrintStream", type: "class", fullName: "java.io.PrintStream", },
PrintWriter: {name: "PrintWriter", type: "class", fullName: "java.io.PrintWriter", },
PushbackInputStream: {name: "PushbackInputStream", type: "class", fullName: "java.io.PushbackInputStream", },
PushbackReader: {name: "PushbackReader", type: "class", fullName: "java.io.PushbackReader", },
RandomAccessFile: {name: "RandomAccessFile", type: "class", fullName: "java.io.RandomAccessFile", },
Reader: {name: "Reader", type: "class", fullName: "java.io.Reader", },
SequenceInputStream: {name: "SequenceInputStream", type: "class", fullName: "java.io.SequenceInputStream", },
SerialCallbackContext: {name: "SerialCallbackContext", type: "class", fullName: "java.io.SerialCallbackContext", },
Serializable: {name: "Serializable", type: "interface", fullName: "java.io.Serializable", },
SerializablePermission: {name: "SerializablePermission", type: "class", fullName: "java.io.SerializablePermission", },
StreamCorruptedException: {name: "StreamCorruptedException", type: "exception", fullName: "java.io.StreamCorruptedException", },
StreamTokenizer: {name: "StreamTokenizer", type: "class", fullName: "java.io.StreamTokenizer", },
StringBufferInputStream: {name: "StringBufferInputStream", type: "class", fullName: "java.io.StringBufferInputStream", },
StringReader: {name: "StringReader", type: "class", fullName: "java.io.StringReader", },
StringWriter: {name: "StringWriter", type: "class", fullName: "java.io.StringWriter", },
SyncFailedException: {name: "SyncFailedException", type: "exception", fullName: "java.io.SyncFailedException", },
UncheckedIOException: {name: "UncheckedIOException", type: "exception", fullName: "java.io.UncheckedIOException", },
UnixFileSystem: {name: "UnixFileSystem", type: "class", fullName: "java.io.UnixFileSystem", },
UnsupportedEncodingException: {name: "UnsupportedEncodingException", type: "exception", fullName: "java.io.UnsupportedEncodingException", },
UTFDataFormatException: {name: "UTFDataFormatException", type: "exception", fullName: "java.io.UTFDataFormatException", },
WriteAbortedException: {name: "WriteAbortedException", type: "exception", fullName: "java.io.WriteAbortedException", },
Writer: {name: "Writer", type: "class", fullName: "java.io.Writer", },
AbstractMethodError: {name: "AbstractMethodError", type: "error", fullName: "java.lang.AbstractMethodError", },
AbstractStringBuilder: {name: "AbstractStringBuilder", type: "class", fullName: "java.lang.AbstractStringBuilder", },
Annotation: {name: "Annotation", type: "interface", fullName: "java.lang.annotation.Annotation", },
AnnotationFormatError: {name: "AnnotationFormatError", type: "error", fullName: "java.lang.annotation.AnnotationFormatError", },
AnnotationTypeMismatchException: {name: "AnnotationTypeMismatchException", type: "exception", fullName: "java.lang.annotation.AnnotationTypeMismatchException", },
Documented: {name: "Documented", type: "annotation", fullName: "java.lang.annotation.Documented", },
ElementType: {name: "ElementType", type: "enum", fullName: "java.lang.annotation.ElementType", },
IncompleteAnnotationException: {name: "IncompleteAnnotationException", type: "exception", fullName: "java.lang.annotation.IncompleteAnnotationException", },
Inherited: {name: "Inherited", type: "annotation", fullName: "java.lang.annotation.Inherited", },
Native: {name: "Native", type: "annotation", fullName: "java.lang.annotation.Native", },
Repeatable: {name: "Repeatable", type: "annotation", fullName: "java.lang.annotation.Repeatable", },
Retention: {name: "Retention", type: "annotation", fullName: "java.lang.annotation.Retention", },
RetentionPolicy: {name: "RetentionPolicy", type: "enum", fullName: "java.lang.annotation.RetentionPolicy", },
Target: {name: "Target", type: "annotation", fullName: "java.lang.annotation.Target", },
Appendable: {name: "Appendable", type: "interface", fullName: "java.lang.Appendable", },
ApplicationShutdownHooks: {name: "ApplicationShutdownHooks", type: "class", fullName: "java.lang.ApplicationShutdownHooks", },
ArithmeticException: {name: "ArithmeticException", type: "exception", fullName: "java.lang.ArithmeticException", },
ArrayIndexOutOfBoundsException: {name: "ArrayIndexOutOfBoundsException", type: "exception", fullName: "java.lang.ArrayIndexOutOfBoundsException", },
ArrayStoreException: {name: "ArrayStoreException", type: "exception", fullName: "java.lang.ArrayStoreException", },
AssertionError: {name: "AssertionError", type: "error", fullName: "java.lang.AssertionError", },
AssertionStatusDirectives: {name: "AssertionStatusDirectives", type: "class", fullName: "java.lang.AssertionStatusDirectives", },
AutoCloseable: {name: "AutoCloseable", type: "interface", fullName: "java.lang.AutoCloseable", },
Boolean: {name: "Boolean", type: "class", fullName: "java.lang.Boolean", },
BootstrapMethodError: {name: "BootstrapMethodError", type: "error", fullName: "java.lang.BootstrapMethodError", },
Byte: {name: "Byte", type: "class", fullName: "java.lang.Byte", },
ByteCache: {name: "ByteCache", type: "class", fullName: "java.lang.Byte$ByteCache", },
Character: {name: "Character", type: "class", fullName: "java.lang.Character", },
CharacterCache: {name: "CharacterCache", type: "class", fullName: "java.lang.Character$CharacterCache", },
CharacterData: {name: "CharacterData", type: "class", fullName: "java.lang.CharacterData", },
CharacterData00: {name: "CharacterData00", type: "class", fullName: "java.lang.CharacterData00", },
CharacterData01: {name: "CharacterData01", type: "class", fullName: "java.lang.CharacterData01", },
CharacterData02: {name: "CharacterData02", type: "class", fullName: "java.lang.CharacterData02", },
CharacterData0E: {name: "CharacterData0E", type: "class", fullName: "java.lang.CharacterData0E", },
CharacterDataLatin1: {name: "CharacterDataLatin1", type: "class", fullName: "java.lang.CharacterDataLatin1", },
CharacterDataPrivateUse: {name: "CharacterDataPrivateUse", type: "class", fullName: "java.lang.CharacterDataPrivateUse", },
CharacterDataUndefined: {name: "CharacterDataUndefined", type: "class", fullName: "java.lang.CharacterDataUndefined", },
CharacterName: {name: "CharacterName", type: "class", fullName: "java.lang.CharacterName", },
Subset: {name: "Subset", type: "class", fullName: "java.lang.Character$Subset", },
UnicodeBlock: {name: "UnicodeBlock", type: "class", fullName: "java.lang.Character$UnicodeBlock", },
UnicodeScript: {name: "UnicodeScript", type: "enum", fullName: "java.lang.Character$UnicodeScript", },
CharSequence: {name: "CharSequence", type: "interface", fullName: "java.lang.CharSequence", },
CharIterator: {name: "CharIterator", type: "class", fullName: "java.lang.CharSequence$1CharIterator", },
CodePointIterator: {name: "CodePointIterator", type: "class", fullName: "java.lang.CharSequence$1CodePointIterator", },
Class: {name: "Class", type: "class", fullName: "java.lang.Class", },
MethodList: {name: "MethodList", type: "class", fullName: "java.lang.PublicMethods$MethodList", },
Readable: {name: "Readable", type: "interface", fullName: "java.lang.Readable", },
Cleaner: {name: "Cleaner", type: "class", fullName: "java.lang.ref.Cleaner", },
Cleanable: {name: "Cleanable", type: "interface", fullName: "java.lang.ref.Cleaner$Cleanable", },
Finalizer: {name: "Finalizer", type: "class", fullName: "java.lang.ref.Finalizer", },
StringBuffer: {name: "StringBuffer", type: "class", fullName: "java.lang.StringBuffer", },
StringBuilder: {name: "StringBuilder", type: "class", fullName: "java.lang.StringBuilder", },
CaseInsensitiveComparator: {name: "CaseInsensitiveComparator", type: "class", fullName: "java.lang.String$CaseInsensitiveComparator", },
StringCoding: {name: "StringCoding", type: "class", fullName: "java.lang.StringCoding", },
Result: {name: "Result", type: "class", fullName: "java.lang.StringCoding$Result", },
StringDecoder: {name: "StringDecoder", type: "class", fullName: "java.lang.StringCoding$StringDecoder", },
StringEncoder: {name: "StringEncoder", type: "class", fullName: "java.lang.StringCoding$StringEncoder", },
StringConcatHelper: {name: "StringConcatHelper", type: "class", fullName: "java.lang.StringConcatHelper", },
StringIndexOutOfBoundsException: {name: "StringIndexOutOfBoundsException", type: "exception", fullName: "java.lang.StringIndexOutOfBoundsException", },
StringLatin1: {name: "StringLatin1", type: "class", fullName: "java.lang.StringLatin1", },
StringUTF16: {name: "StringUTF16", type: "class", fullName: "java.lang.StringUTF16", },
SuppressWarnings: {name: "SuppressWarnings", type: "annotation", fullName: "java.lang.SuppressWarnings", },
System: {name: "System", type: "class", fullName: "java.lang.System", },
FieldPosition: {name: "FieldPosition", type: "class", fullName: "java.text.FieldPosition", },
CalendarAccessControlContext: {name: "CalendarAccessControlContext", type: "class", fullName: "java.util.Calendar$CalendarAccessControlContext", },
Collection: {name: "Collection", type: "interface", fullName: "java.util.Collection", },
Collections: {name: "Collections", type: "class", fullName: "java.util.Collections", },
AsLIFOQueue: {name: "AsLIFOQueue", type: "class", fullName: "java.util.Collections$AsLIFOQueue", },
CheckedCollection: {name: "CheckedCollection", type: "class", fullName: "java.util.Collections$CheckedCollection", },
CheckedList: {name: "CheckedList", type: "class", fullName: "java.util.Collections$CheckedList", },
CheckedMap: {name: "CheckedMap", type: "class", fullName: "java.util.Collections$CheckedMap", },
CheckedEntrySet: {name: "CheckedEntrySet", type: "class", fullName: "java.util.Collections$CheckedMap$CheckedEntrySet", },
CheckedEntry: {name: "CheckedEntry", type: "class", fullName: "java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry", },
CheckedNavigableMap: {name: "CheckedNavigableMap", type: "class", fullName: "java.util.Collections$CheckedNavigableMap", },
CheckedNavigableSet: {name: "CheckedNavigableSet", type: "class", fullName: "java.util.Collections$CheckedNavigableSet", },
CheckedQueue: {name: "CheckedQueue", type: "class", fullName: "java.util.Collections$CheckedQueue", },
CheckedRandomAccessList: {name: "CheckedRandomAccessList", type: "class", fullName: "java.util.Collections$CheckedRandomAccessList", },
CheckedSet: {name: "CheckedSet", type: "class", fullName: "java.util.Collections$CheckedSet", },
CheckedSortedMap: {name: "CheckedSortedMap", type: "class", fullName: "java.util.Collections$CheckedSortedMap", },
CheckedSortedSet: {name: "CheckedSortedSet", type: "class", fullName: "java.util.Collections$CheckedSortedSet", },
CopiesList: {name: "CopiesList", type: "class", fullName: "java.util.Collections$CopiesList", },
EmptyEnumeration: {name: "EmptyEnumeration", type: "class", fullName: "java.util.Collections$EmptyEnumeration", },
EmptyIterator: {name: "EmptyIterator", type: "class", fullName: "java.util.Collections$EmptyIterator", },
EmptyList: {name: "EmptyList", type: "class", fullName: "java.util.Collections$EmptyList", },
EmptyListIterator: {name: "EmptyListIterator", type: "class", fullName: "java.util.Collections$EmptyListIterator", },
EmptyMap: {name: "EmptyMap", type: "class", fullName: "java.util.Collections$EmptyMap", },
EmptySet: {name: "EmptySet", type: "class", fullName: "java.util.Collections$EmptySet", },
ReverseComparator: {name: "ReverseComparator", type: "class", fullName: "java.util.Collections$ReverseComparator", },
ReverseComparator2: {name: "ReverseComparator2", type: "class", fullName: "java.util.Collections$ReverseComparator2", },
SetFromMap: {name: "SetFromMap", type: "class", fullName: "java.util.Collections$SetFromMap", },
SingletonList: {name: "SingletonList", type: "class", fullName: "java.util.Collections$SingletonList", },
SingletonMap: {name: "SingletonMap", type: "class", fullName: "java.util.Collections$SingletonMap", },
SingletonSet: {name: "SingletonSet", type: "class", fullName: "java.util.Collections$SingletonSet", },
SynchronizedCollection: {name: "SynchronizedCollection", type: "class", fullName: "java.util.Collections$SynchronizedCollection", },
SynchronizedList: {name: "SynchronizedList", type: "class", fullName: "java.util.Collections$SynchronizedList", },
SynchronizedMap: {name: "SynchronizedMap", type: "class", fullName: "java.util.Collections$SynchronizedMap", },
SynchronizedNavigableMap: {name: "SynchronizedNavigableMap", type: "class", fullName: "java.util.Collections$SynchronizedNavigableMap", },
SynchronizedNavigableSet: {name: "SynchronizedNavigableSet", type: "class", fullName: "java.util.Collections$SynchronizedNavigableSet", },
SynchronizedRandomAccessList: {name: "SynchronizedRandomAccessList", type: "class", fullName: "java.util.Collections$SynchronizedRandomAccessList", },
SynchronizedSet: {name: "SynchronizedSet", type: "class", fullName: "java.util.Collections$SynchronizedSet", },
SynchronizedSortedMap: {name: "SynchronizedSortedMap", type: "class", fullName: "java.util.Collections$SynchronizedSortedMap", },
SynchronizedSortedSet: {name: "SynchronizedSortedSet", type: "class", fullName: "java.util.Collections$SynchronizedSortedSet", },
UnmodifiableCollection: {name: "UnmodifiableCollection", type: "class", fullName: "java.util.Collections$UnmodifiableCollection", },
UnmodifiableList: {name: "UnmodifiableList", type: "class", fullName: "java.util.Collections$UnmodifiableList", },
UnmodifiableMap: {name: "UnmodifiableMap", type: "class", fullName: "java.util.Collections$UnmodifiableMap", },
UnmodifiableEntrySet: {name: "UnmodifiableEntrySet", type: "class", fullName: "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet", },
UnmodifiableEntry: {name: "UnmodifiableEntry", type: "class", fullName: "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry", },
UnmodifiableEntrySetSpliterator: {name: "UnmodifiableEntrySetSpliterator", type: "class", fullName: "java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator", },
UnmodifiableNavigableMap: {name: "UnmodifiableNavigableMap", type: "class", fullName: "java.util.Collections$UnmodifiableNavigableMap", },
EmptyNavigableMap: {name: "EmptyNavigableMap", type: "class", fullName: "java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap", },
UnmodifiableNavigableSet: {name: "UnmodifiableNavigableSet", type: "class", fullName: "java.util.Collections$UnmodifiableNavigableSet", },
EmptyNavigableSet: {name: "EmptyNavigableSet", type: "class", fullName: "java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet", },
UnmodifiableRandomAccessList: {name: "UnmodifiableRandomAccessList", type: "class", fullName: "java.util.Collections$UnmodifiableRandomAccessList", },
UnmodifiableSet: {name: "UnmodifiableSet", type: "class", fullName: "java.util.Collections$UnmodifiableSet", },
UnmodifiableSortedMap: {name: "UnmodifiableSortedMap", type: "class", fullName: "java.util.Collections$UnmodifiableSortedMap", },
UnmodifiableSortedSet: {name: "UnmodifiableSortedSet", type: "class", fullName: "java.util.Collections$UnmodifiableSortedSet", },
ComparableTimSort: {name: "ComparableTimSort", type: "class", fullName: "java.util.ComparableTimSort", },
Comparator: {name: "Comparator", type: "interface", fullName: "java.util.Comparator", },
Comparators: {name: "Comparators", type: "class", fullName: "java.util.Comparators", },
NaturalOrderComparator: {name: "NaturalOrderComparator", type: "enum", fullName: "java.util.Comparators$NaturalOrderComparator", },
NullComparator: {name: "NullComparator", type: "class", fullName: "java.util.Comparators$NullComparator", },
AbstractExecutorService: {name: "AbstractExecutorService", type: "class", fullName: "java.util.concurrent.AbstractExecutorService", },
ArrayBlockingQueue: {name: "ArrayBlockingQueue", type: "class", fullName: "java.util.concurrent.ArrayBlockingQueue", },
Itr: {name: "Itr", type: "class", fullName: "java.util.concurrent.ArrayBlockingQueue$Itr", },
Itrs: {name: "Itrs", type: "class", fullName: "java.util.concurrent.ArrayBlockingQueue$Itrs", },
Node: {name: "Node", type: "class", fullName: "java.util.concurrent.ArrayBlockingQueue$Itrs$Node", },
AtomicBoolean: {name: "AtomicBoolean", type: "class", fullName: "java.util.concurrent.atomic.AtomicBoolean", },
AtomicInteger: {name: "AtomicInteger", type: "class", fullName: "java.util.concurrent.atomic.AtomicInteger", },
AtomicIntegerArray: {name: "AtomicIntegerArray", type: "class", fullName: "java.util.concurrent.atomic.AtomicIntegerArray", },
AtomicIntegerFieldUpdater: {name: "AtomicIntegerFieldUpdater", type: "class", fullName: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater", },
AtomicIntegerFieldUpdaterImpl: {name: "AtomicIntegerFieldUpdaterImpl", type: "class", fullName: "java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl", },
AtomicLong: {name: "AtomicLong", type: "class", fullName: "java.util.concurrent.atomic.AtomicLong", },
AtomicLongArray: {name: "AtomicLongArray", type: "class", fullName: "java.util.concurrent.atomic.AtomicLongArray", },
AtomicLongFieldUpdater: {name: "AtomicLongFieldUpdater", type: "class", fullName: "java.util.concurrent.atomic.AtomicLongFieldUpdater", },
CASUpdater: {name: "CASUpdater", type: "class", fullName: "java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater", },
LockedUpdater: {name: "LockedUpdater", type: "class", fullName: "java.util.concurrent.atomic.AtomicLongFieldUpdater$LockedUpdater", },
AtomicMarkableReference: {name: "AtomicMarkableReference", type: "class", fullName: "java.util.concurrent.atomic.AtomicMarkableReference", },
Pair: {name: "Pair", type: "class", fullName: "java.util.concurrent.atomic.AtomicMarkableReference$Pair", },
AtomicReference: {name: "AtomicReference", type: "class", fullName: "java.util.concurrent.atomic.AtomicReference", },
AtomicReferenceArray: {name: "AtomicReferenceArray", type: "class", fullName: "java.util.concurrent.atomic.AtomicReferenceArray", },
AtomicReferenceFieldUpdater: {name: "AtomicReferenceFieldUpdater", type: "class", fullName: "java.util.concurrent.atomic.AtomicReferenceFieldUpdater", },
AtomicReferenceFieldUpdaterImpl: {name: "AtomicReferenceFieldUpdaterImpl", type: "class", fullName: "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl", },
AtomicStampedReference: {name: "AtomicStampedReference", type: "class", fullName: "java.util.concurrent.atomic.AtomicStampedReference", },
Pair: {name: "Pair", type: "class", fullName: "java.util.concurrent.atomic.AtomicStampedReference$Pair", },
DoubleAccumulator: {name: "DoubleAccumulator", type: "class", fullName: "java.util.concurrent.atomic.DoubleAccumulator", },
SerializationProxy: {name: "SerializationProxy", type: "class", fullName: "java.util.concurrent.atomic.DoubleAccumulator$SerializationProxy", },
DoubleAdder: {name: "DoubleAdder", type: "class", fullName: "java.util.concurrent.atomic.DoubleAdder", },
SerializationProxy: {name: "SerializationProxy", type: "class", fullName: "java.util.concurrent.atomic.DoubleAdder$SerializationProxy", },
LongAccumulator: {name: "LongAccumulator", type: "class", fullName: "java.util.concurrent.atomic.LongAccumulator", },
SerializationProxy: {name: "SerializationProxy", type: "class", fullName: "java.util.concurrent.atomic.LongAccumulator$SerializationProxy", },
LongAdder: {name: "LongAdder", type: "class", fullName: "java.util.concurrent.atomic.LongAdder", },
SerializationProxy: {name: "SerializationProxy", type: "class", fullName: "java.util.concurrent.atomic.LongAdder$SerializationProxy", },
Striped64: {name: "Striped64", type: "class", fullName: "java.util.concurrent.atomic.Striped64", },
Cell: {name: "Cell", type: "class", fullName: "java.util.concurrent.atomic.Striped64$Cell", },
BlockingDeque: {name: "BlockingDeque", type: "interface", fullName: "java.util.concurrent.BlockingDeque", },
BlockingQueue: {name: "BlockingQueue", type: "interface", fullName: "java.util.concurrent.BlockingQueue", },
BrokenBarrierException: {name: "BrokenBarrierException", type: "exception", fullName: "java.util.concurrent.BrokenBarrierException", },
Callable: {name: "Callable", type: "interface", fullName: "java.util.concurrent.Callable", },
CancellationException: {name: "CancellationException", type: "exception", fullName: "java.util.concurrent.CancellationException", },
CompletableFuture: {name: "CompletableFuture", type: "class", fullName: "java.util.concurrent.CompletableFuture", },
AltResult: {name: "AltResult", type: "class", fullName: "java.util.concurrent.CompletableFuture$AltResult", },
AsynchronousCompletionTask: {name: "AsynchronousCompletionTask", type: "interface", fullName: "java.util.concurrent.CompletableFuture$AsynchronousCompletionTask", },
AsyncRun: {name: "AsyncRun", type: "class", fullName: "java.util.concurrent.CompletableFuture$AsyncRun", },
AsyncSupply: {name: "AsyncSupply", type: "class", fullName: "java.util.concurrent.CompletableFuture$AsyncSupply", },
BiAccept: {name: "BiAccept", type: "class", fullName: "java.util.concurrent.CompletableFuture$BiAccept", },
BiApply: {name: "BiApply", type: "class", fullName: "java.util.concurrent.CompletableFuture$BiApply", },
BiCompletion: {name: "BiCompletion", type: "class", fullName: "java.util.concurrent.CompletableFuture$BiCompletion", },
BiRelay: {name: "BiRelay", type: "class", fullName: "java.util.concurrent.CompletableFuture$BiRelay", },
BiRun: {name: "BiRun", type: "class", fullName: "java.util.concurrent.CompletableFuture$BiRun", },
CoCompletion: {name: "CoCompletion", type: "class", fullName: "java.util.concurrent.CompletableFuture$CoCompletion", },
Completion: {name: "Completion", type: "class", fullName: "java.util.concurrent.CompletableFuture$Completion", },
OrAccept: {name: "OrAccept", type: "class", fullName: "java.util.concurrent.CompletableFuture$OrAccept", },
OrApply: {name: "OrApply", type: "class", fullName: "java.util.concurrent.CompletableFuture$OrApply", },
CLQSpliterator: {name: "CLQSpliterator", type: "class", fullName: "java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator", },
Itr: {name: "Itr", type: "class", fullName: "java.util.concurrent.ConcurrentLinkedQueue$Itr", },
Node: {name: "Node", type: "class", fullName: "java.util.concurrent.ConcurrentLinkedQueue$Node", },
ConcurrentMap: {name: "ConcurrentMap", type: "interface", fullName: "java.util.concurrent.ConcurrentMap", },
ConcurrentNavigableMap: {name: "ConcurrentNavigableMap", type: "interface", fullName: "java.util.concurrent.ConcurrentNavigableMap", },
ConcurrentSkipListMap: {name: "ConcurrentSkipListMap", type: "class", fullName: "java.util.concurrent.ConcurrentSkipListMap", },
CSLMSpliterator: {name: "CSLMSpliterator", type: "class", fullName: "java.util.concurrent.ConcurrentSkipListMap$CSLMSpliterator", },
EntryIterator: {name: "EntryIterator", type: "class", fullName: "java.util.concurrent.ConcurrentSkipListMap$EntryIterator", },
EntrySet: {name: "EntrySet", type: "class", fullName: "java.util.concurrent.ConcurrentSkipListMap$EntrySet", },
EntrySpliterator: {name: "EntrySpliterator", type: "class", fullName: "java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator", },
AbstractOwnableSynchronizer: {name: "AbstractOwnableSynchronizer", type: "class", fullName: "java.util.concurrent.locks.AbstractOwnableSynchronizer", },
AbstractQueuedLongSynchronizer: {name: "AbstractQueuedLongSynchronizer", type: "class", fullName: "java.util.concurrent.locks.AbstractQueuedLongSynchronizer", },
ConditionObject: {name: "ConditionObject", type: "class", fullName: "java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject", },
Values: {name: "Values", type: "class", fullName: "java.util.EnumMap$Values", },
EnumSet: {name: "EnumSet", type: "class", fullName: "java.util.EnumSet", },
SerializationProxy: {name: "SerializationProxy", type: "class", fullName: "java.util.EnumSet$SerializationProxy", },
EventListener: {name: "EventListener", type: "interface", fullName: "java.util.EventListener", },
EventListenerProxy: {name: "EventListenerProxy", type: "class", fullName: "java.util.EventListenerProxy", },
EventObject: {name: "EventObject", type: "class", fullName: "java.util.EventObject", },
FormatFlagsConversionMismatchException: {name: "FormatFlagsConversionMismatchException", type: "exception", fullName: "java.util.FormatFlagsConversionMismatchException", },
Formattable: {name: "Formattable", type: "interface", fullName: "java.util.Formattable", },
FormattableFlags: {name: "FormattableFlags", type: "class", fullName: "java.util.FormattableFlags", },
Formatter: {name: "Formatter", type: "class", fullName: "java.util.Formatter", },
BigDecimalLayoutForm: {name: "BigDecimalLayoutForm", type: "enum", fullName: "java.util.Formatter$BigDecimalLayoutForm", },
FormatterClosedException: {name: "FormatterClosedException", type: "exception", fullName: "java.util.FormatterClosedException", },
Conversion: {name: "Conversion", type: "class", fullName: "java.util.Formatter$Conversion", },
DateTime: {name: "DateTime", type: "class", fullName: "java.util.Formatter$DateTime", },
FixedString: {name: "FixedString", type: "class", fullName: "java.util.Formatter$FixedString", },
Flags: {name: "Flags", type: "class", fullName: "java.util.Formatter$Flags", },
FormatSpecifier: {name: "FormatSpecifier", type: "class", fullName: "java.util.Formatter$FormatSpecifier", },
BigDecimalLayout: {name: "BigDecimalLayout", type: "class", fullName: "java.util.Formatter$FormatSpecifier$BigDecimalLayout", },
FormatString: {name: "FormatString", type: "interface", fullName: "java.util.Formatter$FormatString", },
GregorianCalendar: {name: "GregorianCalendar", type: "class", fullName: "java.util.GregorianCalendar", },
HashMap: {name: "HashMap", type: "class", fullName: "java.util.HashMap", },
EntryIterator: {name: "EntryIterator", type: "class", fullName: "java.util.HashMap$EntryIterator", },
EntrySet: {name: "EntrySet", type: "class", fullName: "java.util.HashMap$EntrySet", },
EntrySpliterator: {name: "EntrySpliterator", type: "class", fullName: "java.util.HashMap$EntrySpliterator", },
HashIterator: {name: "HashIterator", type: "class", fullName: "java.util.HashMap$HashIterator", },
HashMapSpliterator: {name: "HashMapSpliterator", type: "class", fullName: "java.util.HashMap$HashMapSpliterator", },
KeyIterator: {name: "KeyIterator", type: "class", fullName: "java.util.HashMap$KeyIterator", },
KeySet: {name: "KeySet", type: "class", fullName: "java.util.HashMap$KeySet", },
KeySpliterator: {name: "KeySpliterator", type: "class", fullName: "java.util.HashMap$KeySpliterator", },
Node: {name: "Node", type: "class", fullName: "java.util.HashMap$Node", },
TreeNode: {name: "TreeNode", type: "class", fullName: "java.util.HashMap$TreeNode", },
ValueIterator: {name: "ValueIterator", type: "class", fullName: "java.util.HashMap$ValueIterator", },
Values: {name: "Values", type: "class", fullName: "java.util.HashMap$Values", },
ValueSpliterator: {name: "ValueSpliterator", type: "class", fullName: "java.util.HashMap$ValueSpliterator", },
HashSet: {name: "HashSet", type: "class", fullName: "java.util.HashSet", },
Hashtable: {name: "Hashtable", type: "class", fullName: "java.util.Hashtable", },
ListItr: {name: "ListItr", type: "class", fullName: "java.util.LinkedList$ListItr", },
LLSpliterator: {name: "LLSpliterator", type: "class", fullName: "java.util.LinkedList$LLSpliterator", },
Node: {name: "Node", type: "class", fullName: "java.util.LinkedList$Node", },
List: {name: "List", type: "interface", fullName: "java.util.List", },
ListIterator: {name: "ListIterator", type: "interface", fullName: "java.util.ListIterator", },
ListResourceBundle: {name: "ListResourceBundle", type: "class", fullName: "java.util.ListResourceBundle", },
Locale: {name: "Locale", type: "class", fullName: "java.util.Locale", },
Builder: {name: "Builder", type: "class", fullName: "java.util.Locale$Builder", },
Cache: {name: "Cache", type: "class", fullName: "java.util.Locale$Cache", },
Category: {name: "Category", type: "enum", fullName: "java.util.Locale$Category", },
FilteringMode: {name: "FilteringMode", type: "enum", fullName: "java.util.Locale$FilteringMode", },
LocaleISOData: {name: "LocaleISOData", type: "class", fullName: "java.util.LocaleISOData", },
LanguageRange: {name: "LanguageRange", type: "class", fullName: "java.util.Locale$LanguageRange", },
LocaleKey: {name: "LocaleKey", type: "class", fullName: "java.util.Locale$LocaleKey", },
LocaleNameGetter: {name: "LocaleNameGetter", type: "class", fullName: "java.util.Locale$LocaleNameGetter", },
ConsoleHandler: {name: "ConsoleHandler", type: "class", fullName: "java.util.logging.ConsoleHandler", },
ErrorManager: {name: "ErrorManager", type: "class", fullName: "java.util.logging.ErrorManager", },
FileHandler: {name: "FileHandler", type: "class", fullName: "java.util.logging.FileHandler", },
InitializationErrorManager: {name: "InitializationErrorManager", type: "class", fullName: "java.util.logging.FileHandler$InitializationErrorManager", },
MeteredStream: {name: "MeteredStream", type: "class", fullName: "java.util.logging.FileHandler$MeteredStream", },
Filter: {name: "Filter", type: "interface", fullName: "java.util.logging.Filter", },
Formatter: {name: "Formatter", type: "class", fullName: "java.util.logging.Formatter", },
Handler: {name: "Handler", type: "class", fullName: "java.util.logging.Handler", },
Level: {name: "Level", type: "class", fullName: "java.util.logging.Level", },
Change: {name: "Change", type: "class", fullName: "java.util.prefs.FileSystemPreferences$Change", },
FileSystemPreferencesFactory: {name: "FileSystemPreferencesFactory", type: "class", fullName: "java.util.prefs.FileSystemPreferencesFactory", },
NodeCreate: {name: "NodeCreate", type: "class", fullName: "java.util.prefs.FileSystemPreferences$NodeCreate", },
Put: {name: "Put", type: "class", fullName: "java.util.prefs.FileSystemPreferences$Put", },
Remove: {name: "Remove", type: "class", fullName: "java.util.prefs.FileSystemPreferences$Remove", },
InvalidPreferencesFormatException: {name: "InvalidPreferencesFormatException", type: "exception", fullName: "java.util.prefs.InvalidPreferencesFormatException", },
NodeChangeEvent: {name: "NodeChangeEvent", type: "class", fullName: "java.util.prefs.NodeChangeEvent", },
NodeChangeListener: {name: "NodeChangeListener", type: "interface", fullName: "java.util.prefs.NodeChangeListener", },
PreferenceChangeEvent: {name: "PreferenceChangeEvent", type: "class", fullName: "java.util.prefs.PreferenceChangeEvent", },
PreferenceChangeListener: {name: "PreferenceChangeListener", type: "interface", fullName: "java.util.prefs.PreferenceChangeListener", },
Preferences: {name: "Preferences", type: "class", fullName: "java.util.prefs.Preferences", },
PreferencesFactory: {name: "PreferencesFactory", type: "interface", fullName: "java.util.prefs.PreferencesFactory", },
XmlSupport: {name: "XmlSupport", type: "class", fullName: "java.util.prefs.XmlSupport", },
ForEachTask: {name: "ForEachTask", type: "class", fullName: "java.util.stream.ForEachOps$ForEachTask", },
IntPipeline: {name: "IntPipeline", type: "class", fullName: "java.util.stream.IntPipeline", },
Head: {name: "Head", type: "class", fullName: "java.util.stream.IntPipeline$Head", },
StatefulOp: {name: "StatefulOp", type: "class", fullName: "java.util.stream.IntPipeline$StatefulOp", },
StatelessOp: {name: "StatelessOp", type: "class", fullName: "java.util.stream.IntPipeline$StatelessOp", },
IntStream: {name: "IntStream", type: "interface", fullName: "java.util.stream.IntStream", },
Builder: {name: "Builder", type: "interface", fullName: "java.util.stream.IntStream$Builder", },
LongPipeline: {name: "LongPipeline", type: "class", fullName: "java.util.stream.LongPipeline", },
Head: {name: "Head", type: "class", fullName: "java.util.stream.LongPipeline$Head", },
StatefulOp: {name: "StatefulOp", type: "class", fullName: "java.util.stream.LongPipeline$StatefulOp", },
StatelessOp: {name: "StatelessOp", type: "class", fullName: "java.util.stream.LongPipeline$StatelessOp", },
LongStream: {name: "LongStream", type: "interface", fullName: "java.util.stream.LongStream", },
Builder: {name: "Builder", type: "interface", fullName: "java.util.stream.LongStream$Builder", },
MatchOps: {name: "MatchOps", type: "class", fullName: "java.util.stream.MatchOps", },
MatchSink: {name: "MatchSink", type: "class", fullName: "java.util.stream.MatchOps$1MatchSink", },
MatchSink: {name: "MatchSink", type: "class", fullName: "java.util.stream.MatchOps$2MatchSink", },
MatchSink: {name: "MatchSink", type: "class", fullName: "java.util.stream.MatchOps$3MatchSink", },
MatchSink: {name: "MatchSink", type: "class", fullName: "java.util.stream.MatchOps$4MatchSink", },
BooleanTerminalSink: {name: "BooleanTerminalSink", type: "class", fullName: "java.util.stream.MatchOps$BooleanTerminalSink", },
MatchKind: {name: "MatchKind", type: "enum", fullName: "java.util.stream.MatchOps$MatchKind", },
MatchOp: {name: "MatchOp", type: "class", fullName: "java.util.stream.MatchOps$MatchOp", },
MatchTask: {name: "MatchTask", type: "class", fullName: "java.util.stream.MatchOps$MatchTask", },
Node: {name: "Node", type: "interface", fullName: "java.util.stream.Node", },
Builder: {name: "Builder", type: "interface", fullName: "java.util.stream.Node$Builder", },
OfDouble: {name: "OfDouble", type: "interface", fullName: "java.util.stream.Node$Builder$OfDouble", },
OfInt: {name: "OfInt", type: "interface", fullName: "java.util.stream.Node$Builder$OfInt", },
OfLong: {name: "OfLong", type: "interface", fullName: "java.util.stream.Node$Builder$OfLong", },
OfDouble: {name: "OfDouble", type: "interface", fullName: "java.util.stream.Node$OfDouble", },
OfInt: {name: "OfInt", type: "interface", fullName: "java.util.stream.Node$OfInt", },
OfLong: {name: "OfLong", type: "interface", fullName: "java.util.stream.Node$OfLong", },
OfPrimitive: {name: "OfPrimitive", type: "interface", fullName: "java.util.stream.Node$OfPrimitive", },
Nodes: {name: "Nodes", type: "class", fullName: "java.util.stream.Nodes", },
AbstractConcNode: {name: "AbstractConcNode", type: "class", fullName: "java.util.stream.Nodes$AbstractConcNode", },
ArrayNode: {name: "ArrayNode", type: "class", fullName: "java.util.stream.Nodes$ArrayNode", },
CollectionNode: {name: "CollectionNode", type: "class", fullName: "java.util.stream.Nodes$CollectionNode", },
CollectorTask: {name: "CollectorTask", type: "class", fullName: "java.util.stream.Nodes$CollectorTask", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Nodes$CollectorTask$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Nodes$CollectorTask$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Nodes$CollectorTask$OfLong", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.Nodes$CollectorTask$OfRef", },
ConcNode: {name: "ConcNode", type: "class", fullName: "java.util.stream.Nodes$ConcNode", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Nodes$ConcNode$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Nodes$ConcNode$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Nodes$ConcNode$OfLong", },
OfPrimitive: {name: "OfPrimitive", type: "class", fullName: "java.util.stream.Nodes$ConcNode$OfPrimitive", },
DoubleArrayNode: {name: "DoubleArrayNode", type: "class", fullName: "java.util.stream.Nodes$DoubleArrayNode", },
DoubleFixedNodeBuilder: {name: "DoubleFixedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$DoubleFixedNodeBuilder", },
DoubleSpinedNodeBuilder: {name: "DoubleSpinedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$DoubleSpinedNodeBuilder", },
EmptyNode: {name: "EmptyNode", type: "class", fullName: "java.util.stream.Nodes$EmptyNode", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Nodes$EmptyNode$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Nodes$EmptyNode$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Nodes$EmptyNode$OfLong", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.Nodes$EmptyNode$OfRef", },
FixedNodeBuilder: {name: "FixedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$FixedNodeBuilder", },
IntArrayNode: {name: "IntArrayNode", type: "class", fullName: "java.util.stream.Nodes$IntArrayNode", },
InternalNodeSpliterator: {name: "InternalNodeSpliterator", type: "class", fullName: "java.util.stream.Nodes$InternalNodeSpliterator", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Nodes$InternalNodeSpliterator$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Nodes$InternalNodeSpliterator$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Nodes$InternalNodeSpliterator$OfLong", },
OfPrimitive: {name: "OfPrimitive", type: "class", fullName: "java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.Nodes$InternalNodeSpliterator$OfRef", },
IntFixedNodeBuilder: {name: "IntFixedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$IntFixedNodeBuilder", },
IntSpinedNodeBuilder: {name: "IntSpinedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$IntSpinedNodeBuilder", },
LongArrayNode: {name: "LongArrayNode", type: "class", fullName: "java.util.stream.Nodes$LongArrayNode", },
LongFixedNodeBuilder: {name: "LongFixedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$LongFixedNodeBuilder", },
LongSpinedNodeBuilder: {name: "LongSpinedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$LongSpinedNodeBuilder", },
SizedCollectorTask: {name: "SizedCollectorTask", type: "class", fullName: "java.util.stream.Nodes$SizedCollectorTask", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Nodes$SizedCollectorTask$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Nodes$SizedCollectorTask$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Nodes$SizedCollectorTask$OfLong", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.Nodes$SizedCollectorTask$OfRef", },
SpinedNodeBuilder: {name: "SpinedNodeBuilder", type: "class", fullName: "java.util.stream.Nodes$SpinedNodeBuilder", },
ToArrayTask: {name: "ToArrayTask", type: "class", fullName: "java.util.stream.Nodes$ToArrayTask", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Nodes$ToArrayTask$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Nodes$ToArrayTask$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Nodes$ToArrayTask$OfLong", },
OfPrimitive: {name: "OfPrimitive", type: "class", fullName: "java.util.stream.Nodes$ToArrayTask$OfPrimitive", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.Nodes$ToArrayTask$OfRef", },
PipelineHelper: {name: "PipelineHelper", type: "class", fullName: "java.util.stream.PipelineHelper", },
ReduceOps: {name: "ReduceOps", type: "class", fullName: "java.util.stream.ReduceOps", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$10ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$11ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$12ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$13ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$1ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$2ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$3ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$4ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$5ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$6ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$7ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$8ReducingSink", },
ReducingSink: {name: "ReducingSink", type: "class", fullName: "java.util.stream.ReduceOps$9ReducingSink", },
AccumulatingSink: {name: "AccumulatingSink", type: "interface", fullName: "java.util.stream.ReduceOps$AccumulatingSink", },
Box: {name: "Box", type: "class", fullName: "java.util.stream.ReduceOps$Box", },
ReduceOp: {name: "ReduceOp", type: "class", fullName: "java.util.stream.ReduceOps$ReduceOp", },
ReduceTask: {name: "ReduceTask", type: "class", fullName: "java.util.stream.ReduceOps$ReduceTask", },
ReferencePipeline: {name: "ReferencePipeline", type: "class", fullName: "java.util.stream.ReferencePipeline", },
Head: {name: "Head", type: "class", fullName: "java.util.stream.ReferencePipeline$Head", },
StatefulOp: {name: "StatefulOp", type: "class", fullName: "java.util.stream.ReferencePipeline$StatefulOp", },
StatelessOp: {name: "StatelessOp", type: "class", fullName: "java.util.stream.ReferencePipeline$StatelessOp", },
Sink: {name: "Sink", type: "interface", fullName: "java.util.stream.Sink", },
ChainedDouble: {name: "ChainedDouble", type: "class", fullName: "java.util.stream.Sink$ChainedDouble", },
ChainedInt: {name: "ChainedInt", type: "class", fullName: "java.util.stream.Sink$ChainedInt", },
ChainedLong: {name: "ChainedLong", type: "class", fullName: "java.util.stream.Sink$ChainedLong", },
ChainedReference: {name: "ChainedReference", type: "class", fullName: "java.util.stream.Sink$ChainedReference", },
OfDouble: {name: "OfDouble", type: "interface", fullName: "java.util.stream.Sink$OfDouble", },
OfInt: {name: "OfInt", type: "interface", fullName: "java.util.stream.Sink$OfInt", },
OfLong: {name: "OfLong", type: "interface", fullName: "java.util.stream.Sink$OfLong", },
SliceOps: {name: "SliceOps", type: "class", fullName: "java.util.stream.SliceOps", },
SliceTask: {name: "SliceTask", type: "class", fullName: "java.util.stream.SliceOps$SliceTask", },
SortedOps: {name: "SortedOps", type: "class", fullName: "java.util.stream.SortedOps", },
AbstractDoubleSortingSink: {name: "AbstractDoubleSortingSink", type: "class", fullName: "java.util.stream.SortedOps$AbstractDoubleSortingSink", },
AbstractIntSortingSink: {name: "AbstractIntSortingSink", type: "class", fullName: "java.util.stream.SortedOps$AbstractIntSortingSink", },
AbstractLongSortingSink: {name: "AbstractLongSortingSink", type: "class", fullName: "java.util.stream.SortedOps$AbstractLongSortingSink", },
AbstractRefSortingSink: {name: "AbstractRefSortingSink", type: "class", fullName: "java.util.stream.SortedOps$AbstractRefSortingSink", },
DoubleSortingSink: {name: "DoubleSortingSink", type: "class", fullName: "java.util.stream.SortedOps$DoubleSortingSink", },
IntSortingSink: {name: "IntSortingSink", type: "class", fullName: "java.util.stream.SortedOps$IntSortingSink", },
LongSortingSink: {name: "LongSortingSink", type: "class", fullName: "java.util.stream.SortedOps$LongSortingSink", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.SortedOps$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.SortedOps$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.SortedOps$OfLong", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.SortedOps$OfRef", },
RefSortingSink: {name: "RefSortingSink", type: "class", fullName: "java.util.stream.SortedOps$RefSortingSink", },
SizedDoubleSortingSink: {name: "SizedDoubleSortingSink", type: "class", fullName: "java.util.stream.SortedOps$SizedDoubleSortingSink", },
SizedIntSortingSink: {name: "SizedIntSortingSink", type: "class", fullName: "java.util.stream.SortedOps$SizedIntSortingSink", },
SizedLongSortingSink: {name: "SizedLongSortingSink", type: "class", fullName: "java.util.stream.SortedOps$SizedLongSortingSink", },
SizedRefSortingSink: {name: "SizedRefSortingSink", type: "class", fullName: "java.util.stream.SortedOps$SizedRefSortingSink", },
SpinedBuffer: {name: "SpinedBuffer", type: "class", fullName: "java.util.stream.SpinedBuffer", },
Splitr: {name: "Splitr", type: "class", fullName: "java.util.stream.SpinedBuffer$1Splitr", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.SpinedBuffer$OfDouble", },
Splitr: {name: "Splitr", type: "class", fullName: "java.util.stream.SpinedBuffer$OfDouble$1Splitr", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.SpinedBuffer$OfInt", },
Splitr: {name: "Splitr", type: "class", fullName: "java.util.stream.SpinedBuffer$OfInt$1Splitr", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.SpinedBuffer$OfLong", },
Splitr: {name: "Splitr", type: "class", fullName: "java.util.stream.SpinedBuffer$OfLong$1Splitr", },
OfPrimitive: {name: "OfPrimitive", type: "class", fullName: "java.util.stream.SpinedBuffer$OfPrimitive", },
BaseSpliterator: {name: "BaseSpliterator", type: "class", fullName: "java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator", },
Stream: {name: "Stream", type: "interface", fullName: "java.util.stream.Stream", },
Builder: {name: "Builder", type: "interface", fullName: "java.util.stream.Stream$Builder", },
StreamOpFlag: {name: "StreamOpFlag", type: "enum", fullName: "java.util.stream.StreamOpFlag", },
MaskBuilder: {name: "MaskBuilder", type: "class", fullName: "java.util.stream.StreamOpFlag$MaskBuilder", },
Type: {name: "Type", type: "enum", fullName: "java.util.stream.StreamOpFlag$Type", },
Streams: {name: "Streams", type: "class", fullName: "java.util.stream.Streams", },
AbstractStreamBuilderImpl: {name: "AbstractStreamBuilderImpl", type: "class", fullName: "java.util.stream.Streams$AbstractStreamBuilderImpl", },
ConcatSpliterator: {name: "ConcatSpliterator", type: "class", fullName: "java.util.stream.Streams$ConcatSpliterator", },
OfDouble: {name: "OfDouble", type: "class", fullName: "java.util.stream.Streams$ConcatSpliterator$OfDouble", },
OfInt: {name: "OfInt", type: "class", fullName: "java.util.stream.Streams$ConcatSpliterator$OfInt", },
OfLong: {name: "OfLong", type: "class", fullName: "java.util.stream.Streams$ConcatSpliterator$OfLong", },
OfPrimitive: {name: "OfPrimitive", type: "class", fullName: "java.util.stream.Streams$ConcatSpliterator$OfPrimitive", },
OfRef: {name: "OfRef", type: "class", fullName: "java.util.stream.Streams$ConcatSpliterator$OfRef", },
DoubleStreamBuilderImpl: {name: "DoubleStreamBuilderImpl", type: "class", fullName: "java.util.stream.Streams$DoubleStreamBuilderImpl", },
StreamShape: {name: "StreamShape", type: "enum", fullName: "java.util.stream.StreamShape", },
IntStreamBuilderImpl: {name: "IntStreamBuilderImpl", type: "class", fullName: "java.util.stream.Streams$IntStreamBuilderImpl", },
LongStreamBuilderImpl: {name: "LongStreamBuilderImpl", type: "class", fullName: "java.util.stream.Streams$LongStreamBuilderImpl", },
StreamSpliterators: {name: "StreamSpliterators", type: "class", fullName: "java.util.stream.StreamSpliterators", },
DescendingKeyIterator: {name: "DescendingKeyIterator", type: "class", fullName: "java.util.TreeMap$DescendingKeyIterator", },
DescendingKeySpliterator: {name: "DescendingKeySpliterator", type: "class", fullName: "java.util.TreeMap$DescendingKeySpliterator", },
DescendingSubMap: {name: "DescendingSubMap", type: "class", fullName: "java.util.TreeMap$DescendingSubMap", },
DescendingEntrySetView: {name: "DescendingEntrySetView", type: "class", fullName: "java.util.TreeMap$DescendingSubMap$DescendingEntrySetView", },
Entry: {name: "Entry", type: "class", fullName: "java.util.TreeMap$Entry", },
EntryIterator: {name: "EntryIterator", type: "class", fullName: "java.util.TreeMap$EntryIterator", },
EntrySet: {name: "EntrySet", type: "class", fullName: "java.util.TreeMap$EntrySet", },
EntrySpliterator: {name: "EntrySpliterator", type: "class", fullName: "java.util.TreeMap$EntrySpliterator", },
KeyIterator: {name: "KeyIterator", type: "class", fullName: "java.util.TreeMap$KeyIterator", },
KeySet: {name: "KeySet", type: "class", fullName: "java.util.TreeMap$KeySet", },
KeySpliterator: {name: "KeySpliterator", type: "class", fullName: "java.util.TreeMap$KeySpliterator", },
NavigableSubMap: {name: "NavigableSubMap", type: "class", fullName: "java.util.TreeMap$NavigableSubMap", },
DescendingSubMapEntryIterator: {name: "DescendingSubMapEntryIterator", type: "class", fullName: "java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator", },
DescendingSubMapKeyIterator: {name: "DescendingSubMapKeyIterator", type: "class", fullName: "java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator", },
EntrySetView: {name: "EntrySetView", type: "class", fullName: "java.util.TreeMap$NavigableSubMap$EntrySetView", },
SubMapEntryIterator: {name: "SubMapEntryIterator", type: "class", fullName: "java.util.TreeMap$NavigableSubMap$SubMapEntryIterator", },
SubMapIterator: {name: "SubMapIterator", type: "class", fullName: "java.util.TreeMap$NavigableSubMap$SubMapIterator", },
SubMapKeyIterator: {name: "SubMapKeyIterator", type: "class", fullName: "java.util.TreeMap$NavigableSubMap$SubMapKeyIterator", },
PrivateEntryIterator: {name: "PrivateEntryIterator", type: "class", fullName: "java.util.TreeMap$PrivateEntryIterator", },
SubMap: {name: "SubMap", type: "class", fullName: "java.util.TreeMap$SubMap", },
TreeMapSpliterator: {name: "TreeMapSpliterator", type: "class", fullName: "java.util.TreeMap$TreeMapSpliterator", },
ValueIterator: {name: "ValueIterator", type: "class", fullName: "java.util.TreeMap$ValueIterator", },
Values: {name: "Values", type: "class", fullName: "java.util.TreeMap$Values", },
ValueSpliterator: {name: "ValueSpliterator", type: "class", fullName: "java.util.TreeMap$ValueSpliterator", },
TreeSet: {name: "TreeSet", type: "class", fullName: "java.util.TreeSet", },
Tripwire: {name: "Tripwire", type: "class", fullName: "java.util.Tripwire", },
UnknownFormatConversionException: {name: "UnknownFormatConversionException", type: "exception", fullName: "java.util.UnknownFormatConversionException", },
UnknownFormatFlagsException: {name: "UnknownFormatFlagsException", type: "exception", fullName: "java.util.UnknownFormatFlagsException", },
UUID: {name: "UUID", type: "class", fullName: "java.util.UUID", },
Holder: {name: "Holder", type: "class", fullName: "java.util.UUID$Holder", },
Vector: {name: "Vector", type: "class", fullName: "java.util.Vector", },
Itr: {name: "Itr", type: "class", fullName: "java.util.Vector$Itr", },
ListItr: {name: "ListItr", type: "class", fullName: "java.util.Vector$ListItr", },
VectorSpliterator: {name: "VectorSpliterator", type: "class", fullName: "java.util.Vector$VectorSpliterator", },
WeakHashMap: {name: "WeakHashMap", type: "class", fullName: "java.util.WeakHashMap", },
});
